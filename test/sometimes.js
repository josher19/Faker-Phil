// Generated by CoffeeScript 1.12.7
var Phil, expect;

Phil = require('../Phil');

expect = require('./utils').expect;

describe('sometimes', function() {
  var values;
  values = [];
  beforeEach(function() {
    values = [];
    return void 0;
  });
  it('does something approx. 1/3 of the time by default', function() {
    var j, k, pusher, results, x;
    pusher = function(i) {
      return values.push(i);
    };
    for (x = j = 0; j <= 1000; x = ++j) {
      Phil.sometimes(pusher);
    }
    expect((function() {
      results = [];
      for (k = 150; k <= 450; k++){ results.push(k); }
      return results;
    }).apply(this)).toCover(values.length);
    return this;
  });
  it('does something approx. 1/10 of the time', function() {
    var j, k, pusher, results, x;
    pusher = function(i) {
      return values.push(i);
    };
    values = [];
    for (x = j = 0; j <= 1000; x = ++j) {
      Phil.sometimes(10, pusher);
    }
    expect((function() {
      results = [];
      for (k = 0; k <= 150; k++){ results.push(k); }
      return results;
    }).apply(this)).toCover(values.length);
    return this;
  });
  return this;
});
