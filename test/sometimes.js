// Generated by CoffeeScript 1.7.1
var Phil, expect;

Phil = require('../Phil');

expect = require('./utils').expect;

describe('sometimes', function() {
  var values;
  values = [];
  beforeEach(function() {
    values = [];
    return void 0;
  });
  it('does something approx. 1/3 of the time by default', function() {
    var pusher, x, _i, _j, _results;
    pusher = function(i) {
      return values.push(i);
    };
    for (x = _i = 0; _i <= 1000; x = ++_i) {
      Phil.sometimes(pusher);
    }
    expect((function() {
      _results = [];
      for (_j = 150; _j <= 450; _j++){ _results.push(_j); }
      return _results;
    }).apply(this)).toCover(values.length);
    return this;
  });
  it('does something approx. 1/10 of the time', function() {
    var pusher, x, _i, _j, _results;
    pusher = function(i) {
      return values.push(i);
    };
    values = [];
    for (x = _i = 0; _i <= 1000; x = ++_i) {
      Phil.sometimes(10, pusher);
    }
    expect((function() {
      _results = [];
      for (_j = 0; _j <= 150; _j++){ _results.push(_j); }
      return _results;
    }).apply(this)).toCover(values.length);
    return this;
  });
  return this;
});
